unit Controller.Item;

interface

uses
  FireDAC.Comp.Client, Data.DB;

type
  TControllerItem = class
  public
    constructor Create(AMemtable: TFDMemTable);
    procedure Adicionar(AItem: string; APreco: Currency; AMemTable: TFDMemtable);
    procedure NovaVenda;
  end;

implementation

{ TControllerItem }

procedure TControllerItem.Adicionar(AItem: string; APreco: Currency; AMemTable: TFDMemtable);
begin
  if AMemTable.Locate('item',AItem,[loCaseInsensitive]) then
  begin
    AMemTable.Edit;
    AMemTable.FieldByName('qtd').AsInteger := AMemTable.FieldByName('qtd').AsInteger + 1;
    AMemTable.Post;
  end
  else
  begin
    AMemTable.Edit;
    AMemTable.FieldByName('item').AsString := AItem;
    AMemTable.FieldByName('qtd').AsInteger := 1;
    AMemTable.FieldByName('preco').AsCurrency := APreco;
    AMemTable.Post;
  end;
end;

constructor TControllerItem.Create(AMemtable: TFDMemTable);
begin

end;

procedure TControllerItem.NovaVenda;
begin
  if not  then

end;

end.
